/*
Copyright (C) 2017 LiveCode Ltd.

This file is part of LiveCode.

LiveCode is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License v3 as published by the Free
Software Foundation.

LiveCode is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or
FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
for more details.

You should have received a copy of the GNU General Public License
along with LiveCode.  If not see <http://www.gnu.org/licenses/>.  */

module com.livecode.encoding.tests

use com.livecode.__INTERNAL._testlib

public handler TestCompress()
	variable tBytes as Data
	variable tCompressed as Data
	put 1024 random bytes into tBytes
	
	compress tBytes using zlib into tCompressed
	test "compress changes data" when tBytes is not tCompressed
	
	test diagnostic "compression worked"
	
	test "compressed data returns true for is compressed predicate" \
		when tCompressed is compressed using zlib

	test diagnostic "decompression worked"

	decompress tCompressed using zlib
	test "compression round trips" when the result is tBytes
end handler

public handler TestBase64Encode()
	variable tBytes as Data
	put 120 random bytes into tBytes
	
	encode tBytes using base sixty-four
	decode the result using base sixty-four
	test "base64 encoding round trips" when the result is tBytes
end handler

constant kUrlEncodingList is \
["%00", "%01", "%02", "%03", "%04", "%05", "%06", "%07", "%08", "%09", \
"%0D%0A", "%0B", "%0C", "%0D", "%0E", "%0F", "%10", "%11", "%12", \
"%13", "%14", "%15", "%16", "%17", "%18", "%19", "%1A", "%1B", "%1C", \
"%1D", "%1E", "%1F", "+", "%21", "%22", "%23", "%24", "%25", "%26", \
"%27", "%28", "%29", "*", "%2B", "%2C", "-", ".", "%2F", "0", "1", \
"2", "3", "4", "5", "6", "7", "8", "9", "%3A", "%3B", "%3C", "%3D", \
"%3E", "%3F", "%40", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", \
"K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", \
"Y", "Z", "%5B", "%5C", "%5D", "%5E", "_", "%60", "a", "b", "c", "d", \
"e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", \
"s", "t", "u", "v", "w", "x", "y", "z", "%7B", "%7C", "%7D", "%7E", \
"%7F", "%80", "%81", "%82", "%83", "%84", "%85", "%86", "%87", "%88", \
"%89", "%8A", "%8B", "%8C", "%8D", "%8E", "%8F", "%90", "%91", "%92", \
"%93", "%94", "%95", "%96", "%97", "%98", "%99", "%9A", "%9B", "%9C", \
"%9D", "%9E", "%9F", "%A0", "%A1", "%A2", "%A3", "%A4", "%A5", "%A6", \
"%A7", "%A8", "%A9", "%AA", "%AB", "%AC", "%AD", "%AE", "%AF", "%B0", \
"%B1", "%B2", "%B3", "%B4", "%B5", "%B6", "%B7", "%B8", "%B9", "%BA", \
"%BB", "%BC", "%BD", "%BE", "%BF", "%C0", "%C1", "%C2", "%C3", "%C4", \
"%C5", "%C6", "%C7", "%C8", "%C9", "%CA", "%CB", "%CC", "%CD", "%CE", \
"%CF", "%D0", "%D1", "%D2", "%D3", "%D4", "%D5", "%D6", "%D7", "%D8", \
"%D9", "%DA", "%DB", "%DC", "%DD", "%DE", "%DF", "%E0", "%E1", "%E2", \
"%E3", "%E4", "%E5", "%E6", "%E7", "%E8", "%E9", "%EA", "%EB", "%EC", \
"%ED", "%EE", "%EF", "%F0", "%F1", "%F2", "%F3", "%F4", "%F5", "%F6", \
"%F7", "%F8", "%F9", "%FA", "%FB", "%FC", "%FD", "%FE", "%FF"]

public handler TestUrlEncoding()	
	test diagnostic (the number of elements in kUrlEncodingList) formatted as string

	variable tChar as String
	variable tIndex as Integer
	repeat with tIndex from 0 up to 255
	   put the char with code tIndex into tChar
	   encode tChar for url
	   test "url encode char" && tIndex formatted as string \
	    	when the result is kUrlEncodingList[tIndex + 1]
	   decode kUrlEncodingList[tIndex + 1] from url
	   test "url decode" && kUrlEncodingList[tIndex + 1] \
	   		when the result is tChar
	end repeat
end handler

public handler TestLegacyUrlEncoding()	
	test diagnostic (the number of elements in kUrlEncodingList) formatted as string

	variable tChar as String
	variable tIndex as Integer
	repeat with tIndex from 0 up to 255
	   put the char with code tIndex into tChar
	   encode tChar for legacy url
	   test "legacy url encode char" && tIndex formatted as string \
	    	when the result is kUrlEncodingList[tIndex + 1]
	   decode kUrlEncodingList[tIndex + 1] from legacy url
	   test "legacy url decode" && kUrlEncodingList[tIndex + 1] \
	   		when the result is tChar
	end repeat
end handler

end module
