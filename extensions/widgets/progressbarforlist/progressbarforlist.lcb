/*
Copyright (C) 2017 LiveCode Ltd.

This file is part of LiveCode.

LiveCode is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License v3 as published by the Free
Software Foundation.

LiveCode is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or
FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
for more details.

You should have received a copy of the GNU General Public License
along with LiveCode.  If not see <http://www.gnu.org/licenses/>.  */

widget com.livecode.widget.progressbarforlist

metadata title is "Progress Bar"
metadata author is "LiveCode"
metadata version is "1.0.0"
metadata userVisible is "false"

use com.livecode.canvas
use com.livecode.widget
use com.livecode.library.widgetutils

property progressRatio				get mProgress			set setProgress
property onLight     get mOnLight      set setOnLight
property mainColor      get mColor     set setColor
property altColor      get mHiliteColor     set setHiliteColor

private variable mProgress 			as Number
private variable mOnLight 			as Boolean
private variable mColor 			as String
private variable mHiliteColor    as String

public handler OnSave(out rProperties as Array)
	put mProgress into rProperties["progress"]
	put mOnLight into rProperties["onLight"]
	put mColor into rProperties["color"]
	put mHiliteColor into rProperties["hilitecolor"]

	return rProperties
end handler

public handler OnLoad(in pProperties as Array)
	put pProperties["progress"] into mProgress
	put pProperties["onLight"] into mOnLight
	put pProperties["color"] into mColor
	put pProperties["hilitecolor"] into mColor
end handler

public handler OnCreate()
	put 0 into mProgress
	put true into mOnLight
	put "88,176,201" into mColor
	put "215,237,243" into mHiliteColor
end handler

public handler OnPaint()
   variable tWidth as Real
   variable tHeight as Real
   put my width into tWidth
   put my height into tHeight

   if mOnLight then
      set the paint of this canvas to solid paint with color [0,0,0,0.16]
      fill rectangle path of my bounds on this canvas

      set the paint of this canvas to solid paint with stringToColor(mColor)
      fill rectangle path of rectangle [0,0,tWidth * mProgress, tHeight] on this canvas
   else
      set the paint of this canvas to solid paint with color [1,1,1,0.2]
      fill rectangle path of my bounds on this canvas

      set the paint of this canvas to solid paint with stringToColor(mHiliteColor)
      fill rectangle path of rectangle [0,0,tWidth * mProgress, tHeight] on this canvas
   end if
end handler

public handler setProgress(in pProgress as Number) returns nothing
	put pProgress into mProgress
	redraw all
end handler

public handler setOnLight(in pOnLight as Boolean) returns nothing
	put pOnLight into mOnLight
	redraw all
end handler

public handler setColor(in pColor as String) returns nothing
	put pColor into mColor
	redraw all
end handler

public handler setHiliteColor(in pColor as String) returns nothing
	put pColor into mHiliteColor
	redraw all
end handler

end widget
