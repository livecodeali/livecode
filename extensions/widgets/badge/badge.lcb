/*
Copyright (C) 2017 LiveCode Ltd.

This file is part of LiveCode.

LiveCode is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License v3 as published by the Free
Software Foundation.

LiveCode is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or
FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
for more details.

You should have received a copy of the GNU General Public License
along with LiveCode.  If not see <http://www.gnu.org/licenses/>.  */

widget com.livecode.widget.badge

use com.livecode.canvas
use com.livecode.widget
use com.livecode.library.widgetutils

metadata author is "LiveCode"
metadata version is "1.0.0"
metadata title is "Badge"
metadata userVisible is "false"

property badgeColor 			get mColor 		set setColor
property badgeTextColor 	get mTextColor 		set setTextColor
property badgeLabel 			get mLabel 		set setLabel
property badgeTextSize		get mTextSize		set setTextSize

private variable mColor as String
private variable mTextColor as String
private variable mLabel as String
private variable mTextSize as Number

private variable mState as String

public handler OnSave(out rProperties as Array)
	put the empty array into rProperties

	put mColor into rProperties["color"]
	put mTextColor into rProperties["textcolor"]
	put mLabel into rProperties["label"]
    put mTextSize into rProperties["textsize"]

	return rProperties
end handler

public handler OnLoad(in pProperties as Array)
	put pProperties["color"] into mColor
	put pProperties["textcolor"] into mTextColor
	put pProperties["label"] into mLabel
    put pProperties["textsize"] into mTextSize
end handler

public handler OnCreate() returns nothing
	put "255,255,255" into mColor
	put "Label" into mLabel
	put "0,0,0" into mTextColor
	put 14 into mTextSize
    put "" into mState
end handler

public handler OnPaint() returns nothing
	set the paint of this canvas to solid paint with stringToColor(mColor)
	fill rectangle path of my bounds on this canvas

	set the font of this canvas to getFont("label")
	set the paint of this canvas to solid paint with stringToColor(mTextColor)
   fill text mLabel at center of my bounds on this canvas

    if mState is "depressed" then
      set the paint of this canvas to solid paint with color [0,0,0,0.2]
      fill rectangle path of my bounds on this canvas
   else if mState is "over" then
      set the paint of this canvas to solid paint with color [0,0,0,0.1]
      fill rectangle path of my bounds on this canvas
   end if
end handler

private handler getFont(in pType as String) returns Font
	variable tFont as Font
	put the font of this canvas into tFont

	if pType is "label" then
		set the size of tFont to mTextSize
	end if

	return tFont
end handler

public handler OnMouseDown() returns nothing
	put "depressed" into mState
	redraw all
end handler

public handler OnMouseUp() returns nothing
	put "" into mState
	redraw all
end handler

public handler OnMouseEnter() returns nothing
	put "over" into mState
	redraw all
end handler

public handler OnMouseLeave() returns nothing
	if mState is not "pressed" then
		put "none" into mState
		redraw all
	end if
end handler

public handler OnClick()
	post "badgeClicked" with [mLabel]
end handler

private handler setLabel(in pLabel as String) returns nothing
	put pLabel into mLabel
	redraw all
end handler

private handler setColor(in pColor as String) returns nothing
	put pColor into mColor
	redraw all
end handler

private handler setTextColor(in pColor as String) returns nothing
	put pColor into mTextColor
	redraw all
end handler

private handler setTextSize(in pSize as Number) returns nothing
	put pSize into mTextSize
	redraw all
end handler

end widget
